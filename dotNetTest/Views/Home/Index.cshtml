@using System.Collections.Specialized
@using System.Data.SqlClient;
@using System.Diagnostics
@using System.Text;
@using System.Web.UI.WebControls
@using dotNetTest.Models
@using System
@using System.Text.RegularExpressions
@{



    var userStat = ViewBag.UserStat;
    var userStatCount = ViewBag.UserStatCount;
    var userStatList = ViewBag.UserStatList;
    var questionStatCount = ViewBag.SystemStatCount;
    var questionStat = ViewBag.SystemStat;
    var systemStatList = ViewBag.SystemStatList;


    List<string[]> QuestionYear = new List<string[]>() ;
    List<string[]> QuestionMonth = new List<string[]>();
    List<string[]> QuestionDay = new List<string[]>();
    string QuestionAmountToday = "";
    string QuestionAmountAll = "";

    List<string[]> UserYear = new List<string[]>() ;
    List<string[]> UserMonth = new List<string[]>();
    List<string[]> UserDay = new List<string[]>();
    string UserAmountToday = "";
    string UserAmountAll = "";

    bool questionBool = false;
    bool userBool = false;
    if (TempData.Count > 0)
    {

        try
        {


            QuestionYear = TempData["QuestionYearData"] as List<string[]>;
            QuestionMonth = TempData["QuestionMonthData"] as List<string[]>;
            QuestionDay = TempData["QuestionDayData"] as List<string[]>;
            QuestionAmountToday = TempData["QuestionAmountToday"].ToString();
            QuestionAmountAll = TempData["questionAmountAll"].ToString();
            questionBool = true;
        }
        catch
        {

        }

        try
        {


            UserYear = TempData["UserYearData"] as List<string[]>;
            UserMonth = TempData["UserMonthData"] as List<string[]>;
            UserDay = TempData["UserDayData"] as List<string[]>;
            UserAmountToday = TempData["UserAmountToday"].ToString();
            UserAmountAll = TempData["UserAmountAll"].ToString();
            userBool = true;
        }
        catch
        {

        }

    }










    var users = ViewBag.Users;
    var questions = ViewBag.Questions;
    var answers = ViewBag.Answers;

    List<string[]> day = ViewBag.DayData;
    List<string[]> month = ViewBag.MonthData;
    List<string[]> year = ViewBag.YearData;



    List<string> nouns = ViewBag.Nouns;
    List<string> verbs = ViewBag.Verbs;
    var output = "";
    var input = "";
    var test = "";






    var answer = "";
    var question = "";


}


<div class="row mb-4">
    <div class="col-md-4">
        <div class="d-flex data-grid flex-column box-shadow ">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>verbs and nouns</span>
            </div>
            <div class="data-body p-2">
                <div id="verbs_nouns_chart" class="chart_div"></div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="d-flex data-grid flex-column box-shadow">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>Amount verbs and nouns</span>
            </div>
            <div class="data-body p-2">
                <div id="amount_verbs" class="chart_div"></div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="d-flex data-grid flex-column box-shadow">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>general statics</span>
            </div>
            <div class="data-body p-2">
                <div id="bar_statics" class="chart_div"></div>
            </div>
        </div>
    </div>
</div>

<!-- User and line chart begin -->
<div class="row mb-4" style="margin-top: 2em;">
    <div class="col-md-4" style="height: 236.8px">
        <div class="d-flex data-grid flex-column box-shadow h-100">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>Users</span>
            </div>
            <div class="data-body p-2 text-light">
                <div class="d-flex flex-row w-100">
                    <div class="d-flex justify-content align-items p-3">
                        <span class="ft-60"><i class="fas fa-user"></i></span>

                    </div>
                    <div class="d-flex flex-column ml-2">
                        <div class="d-flex align-items border-bottom ">
                            <span class="ft-40 p-2 pl-0">@users.Count</span>
                            <small class="text-uppercase ft-11">Registered users who joined the chat with the bot</small>
                        </div>
                        <div class="d-flex align-items">
                            <span class="ft-40 p-2 pl-0">@userStat.Count</span>
                            <small class="text-uppercase ft-11">Users who at least one time communicate with the bot</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="d-flex data-grid flex-column box-shadow" id="height2">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>QUESTIONS OVER TIME</span>
                <select id="timeSelect" class="form-control" onchange="drawLineChart()">

                    <option value="year">Year</option>
                    <option value="month">Month</option>
                    <option value="day" selected>Day</option>
                </select>

            </div>
            <div class="data-body p-0">
                <div id="line_statics" class="chart_div"></div>
            </div>
        </div>
    </div>
</div>
<!--           -->


<div class="row mb-4">
    <div class="col-md-6">
        <div class="d-flex data-grid flex-column box-shadow">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>User statistics</span>
            </div>
            <div class="data-body p-2">
                <div id="userStat" class="chart_div"></div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="d-flex data-grid flex-column box-shadow">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>Question statistics</span>
            </div>
            <div class="data-body p-2">
                <div id="systemStat" class="chart_div"></div>
            </div>
        </div>
    </div>
</div>


<!-- User and line chart end -->
<!-- section all verbs, nouns, question and answer begin -->
<div class="row mb-4" style="margin-top: 2em;">
    <div class="col-md-3">
        <div class="d-flex data-grid flex-column box-shadow ">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>Verbs</span>
            </div>
            <div class="data-body p-2">
                <select multiple class="form-control bg-transparent no-border text-white static-select p-0" size="5">
                    @foreach (var v in verbs)
                    {
                        <option>@v</option>
                    }
                </select>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="d-flex data-grid flex-column box-shadow">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>Nouns</span>
            </div>
            <div class="data-body p-2">
                <select multiple class="form-control bg-transparent no-border text-white static-select p-0" size="5">
                    @foreach (var n in nouns)
                    {
                        <option>@n</option>
                    }
                </select>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="d-flex data-grid flex-column box-shadow ">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>Question</span>
            </div>
            <div class="data-body p-2">
                <select multiple class="form-control bg-transparent no-border text-white static-select p-0" size="5">
                    @foreach (var q in questions)
                    {
                        <option>@q</option>
                    }
                </select>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="d-flex data-grid flex-column box-shadow ">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>Answer</span>
            </div>
            <div class="data-body p-2">
                <select multiple class="form-control bg-transparent no-border text-white static-select p-0" size="5">
                    @foreach (var a in answers)
                    {
                        <option>@a</option>
                    }
                </select>
            </div>
        </div>
    </div>
</div>


<div class="row md-4">
    <div class="col-md-12">
        <div class="d-flex data-grid flex-column box-shadow">
            <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                <span>Question statistics</span>
            </div>
        <div class="data-body p-2">
            

            
            <div class="col-md-3">
                <div class="d-flex data-grid flex-column box-shadow">
                    <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                        <ul class="nav nav-tabs">
                            <li class="nav-item">
                                <a class="nav-link active" data-toggle="tab" href="#home"><span>Questions</span></a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#menu1"><span>Users</span></a>
                            </li>
                              
                        </ul>
                           
                        <div class="tab-content items">
                            <div class="tab-pane container active col-md-12" id="home">

                                <div class="list-group">
                                    @using (Html.BeginForm("QuestionStats", "Home", FormMethod.Post))
                                    {
                                        foreach (var q in questions)
                                        {
                                            <button type="submit"  name="question" value="@q" class="list-group-item list-group-item-action">@q</button>
                                        }
                                    }


                                </div>

                            </div>

                            <div class="tab-pane container fade  col-md-12" id="menu1">

                                <div class="list-group">
                                    @using (Html.BeginForm("UserStats", "Home", FormMethod.Post))
                                    {
                                        foreach (var u in users)
                                        {
                                            <button type="submit" name="user" value="@u" class="list-group-item list-group-item-action">@u</button>
                                        }

                                    }

                                </div>
                            </div>
                                    
                        </div>
                           

                    </div>
                </div>

            </div>
      
            <div class="col-md-6">
                <div class="d-flex data-grid flex-column box-shadow" id="height2">
                    <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                        <span>QUESTIONS OVER TIME</span>
                        <select id="timeSelectQuestion" class="form-control" onchange="drawLineChartQuestion()">

                            <option value="year">Year</option>
                            <option value="month">Month</option>
                            <option value="day" selected>Day</option>
                        </select>

                    </div>
                    <div class="data-body p-0">
                        <div id="line_statics_question" class="chart_div"></div>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="d-flex data-grid flex-column box-shadow h-100">
                    <div class="data-header text-uppercase ft-15 p-2 home-border-bottom">
                        <span>
                            @if (questionBool)
                            {
                                @:Questions
                            }
                            else
                            {
                                @:Users
                            }
                        </span>
                    </div>
                    <div class="data-body p-2 text-light">
                        <div class="d-flex flex-row w-100">
                          
                             

                        
                             
                                    <div class="d-flex flex-column ml-2">
                                        <div class="d-flex align-items border-bottom ">
                                            @if (questionBool)
                                            {
                                                <span class="ft-40 p-2 pl-0">@QuestionAmountToday </span>
                                                <small class="text-uppercase ft-11">Times the question has been asked today</small>
                                            }
                                            else
                                            {
                                                <span class="ft-40 p-2 pl-0">@UserAmountToday </span>
                                                <small class="text-uppercase ft-11">Times the user has asked something today</small>
                                            }


                                        </div>
                                        <div class="d-flex align-items">
                                            @if (questionBool)
                                            {
                                                <span class="ft-40 p-2 pl-0">@QuestionAmountAll</span>
                                                <small class="text-uppercase ft-11">Times the question has been asked</small>
                                            }
                                            else
                                            {
                                                <span class="ft-40 p-2 pl-0">@UserAmountAll</span>
                                                <small class="text-uppercase ft-11">Times the user has asked something</small>
                                            }



                                        </div>
                                    </div>

                         
                        </div>
                    </div>
                </div>
            </div>
                      

                    </div>
                </div>
            </div>
        </div>

<style>
    .items {
                                            height:150px;
                                                overflow-y: scroll;
                                            }
</style>

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script type="text/javascript">

   
    // Load the Visualization API and the corechart package.
    google.charts.load('current', { 'packages': ['corechart', 'bar', 'line'] });

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);

    google.charts.setOnLoadCallback(drawColColors);
    google.charts.setOnLoadCallback(drawBarColors);
    google.charts.setOnLoadCallback(drawLineChart);

    google.charts.setOnLoadCallback(drawQuestionStats);
    google.charts.setOnLoadCallback(drawSystemStats);
    google.charts.setOnLoadCallback(drawLineChartQuestion);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Topping');
        data.addColumn('number', 'Slices');
        data.addRows([
            ['Registered nouns', @nouns.Count],
            ['Registered verbs', @verbs.Count]
        ]);

        // Set chart options
        var options = {
            'height': 200,
            'backgroundColor': '#26262b',
            'chartArea': { left: 5, top: 30 },
            colors: ['#e6693e', '#50d4b5']
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('verbs_nouns_chart'));
        chart.draw(data, options);
    }

    function drawColColors() {
        var data = new google.visualization.arrayToDataTable([
            ['Move', 'Percentage'],
            ["Nouns (" + @nouns.Count + ")",  @nouns.Count],
            ["Verbs (" + @verbs.Count + ")", @verbs.Count],
        ]);

        var options = {
            height: 200,
            backgroundColor: '#26262b',
            legend: { position: 'none' },
            axes: {
                x: {
                    0: { side: 'top', label: 'amount of both' } // Top x-axis.
                }
            },
            bar: { groupWidth: "90%" },
            colors: ['#50d4b5', '#e6693e']
        };

        var chart = new google.charts.Bar(document.getElementById('amount_verbs'));
        // Convert the Classic options to Material options.
        chart.draw(data, google.charts.Bar.convertOptions(options));
    }

    function drawBarColors() {
        var data = new google.visualization.arrayToDataTable([
            ['', 'Percentage'],
            ["Questions (@questions.Count)", @questions.Count],
            ["Questions (@questions.Count)", @questions.Count],
            ["Answers (@answers.Count)", @answers.Count],
            ["Verbs (@verbs.Count)", @verbs.Count],
            ["Nouns (@nouns.Count)", @nouns.Count],
        ]);

        var options = {
            height: 200,
            legend: { position: 'none' },
            backgroundColor: '#26262b',
            bars: 'horizontal', // Required for Material Bar Charts.
            axes: {
                x: {
                    0: { side: 'top' } // Top x-axis.
                }
            },
            bar: { groupWidth: "90%" },
            //#b8bfda
            colors: ["#8e9fdc"]
        };

        var chart = new google.charts.Bar(document.getElementById('bar_statics'));
        chart.draw(data, google.charts.Bar.convertOptions(options));
    }


    function drawLineChart() {

        var selection = document.getElementById("timeSelect").value;


        if (selection == 'year') {
            var data = google.visualization.arrayToDataTable([
                ['Amount of questions', 'Time(year)'],



                @foreach (var arr in year)
                {

                    @:['@(arr[1])', @(arr[0])],
                }

            ]);
        }
        else
        if (selection == 'month') {
            var data = google.visualization.arrayToDataTable([
                ['Amount of questions', 'Time(month)'],



                @foreach (var arr in month)
                    {

                        @:['@(arr[1])', @(arr[0])],
                    }

            ]);
        }
        else{
            var data = google.visualization.arrayToDataTable([
                ['Amount of questions', 'Time(days)'],



                @foreach (var arr in day)
                     {

                         @:['@(arr[1])', @(arr[0])],
                     }

            ]);
        }


        var options = {
            title: 'Amount of asked questions over time',
            height: 200,
            curveType: 'function',
            backgroundColor: '#26262b',
            colors: ['#50d4b5'],
            legend: { position: 'bottom' }
        };

        var chart = new google.visualization.LineChart(document.getElementById('line_statics'));

        chart.draw(data, options);

    }



    function drawQuestionStats() {
        var data = new google.visualization.arrayToDataTable([
            ['', 'Percentage'],




            @foreach (var arr in userStatList)
            {

                 @:['@(arr[0])', @(arr[1])],
            }


        ]);

        var options = {
            height: 200,
            legend: { position: 'none' },
            backgroundColor: '#26262b',
            bars: 'horizontal', // Required for Material Bar Charts.
            axes: {
                x: {
                    0: { side: 'top'} // Top x-axis.
                }
            },
            bar: { groupWidth: "90%" },
            //#b8bfda
            colors: ["#8e9fdc"]
        };

        var chart = new google.charts.Bar(document.getElementById('userStat'));
        chart.draw(data, google.charts.Bar.convertOptions(options));
    }

    function drawSystemStats() {
        var data = new google.visualization.arrayToDataTable([
            ['', 'Percentage'],



            @foreach (var arr in systemStatList)
            {

                 @:['@(arr[0])', @(arr[1])],
            }


        ]);

        var options = {
            height: 200,
            backgroundColor: '#26262b',
            legend: { position: 'none' },
            axes: {
                x: {
                    0: { side: 'top', label: 'amount of both' } // Top x-axis.
                }
            },
            bar: { groupWidth: "90%" },
            colors: ['#50d4b5', '#e6693e']
        };


        var chart = new google.charts.Bar(document.getElementById('systemStat'));
        chart.draw(data, google.charts.Bar.convertOptions(options));
    }



    function drawLineChartQuestion() {

        var selection = document.getElementById("timeSelectQuestion").value;


        @if (!(QuestionYear == null))
        {

            <text>






                if (selection == 'year') {
                    var data = google.visualization.arrayToDataTable([
                        ['Amount of questions', 'Time(year)'],

                        @foreach (var arr in QuestionYear)
                        {

                            @:['@(arr[1])', @(arr[0])],
                        }

                    ]);
                } else if (selection == 'month') {
                    var data = google.visualization.arrayToDataTable([
                        ['Amount of questions', 'Time(month)'],



                        @foreach (var arr in QuestionMonth)
                        {

                            @:['@(arr[1])', @(arr[0])],
                        }

                    ]);
                } else {
                    var data = google.visualization.arrayToDataTable([
                        ['Amount of questions', 'Time(days)'],





                        @foreach (var arr in QuestionDay)
                        {
                            Debug.WriteLine(arr[0]);
                            Debug.WriteLine(arr[1]);
                            @:['@(arr[1])', @(arr[0])],
                        }

                    ]);
                }



            </text>


        }
        @if (!(UserYear == null))
            {

            <text>
        
                if (selection == 'year') {
                    var data = google.visualization.arrayToDataTable([
                        ['Amount of questions', 'Time(year)'],

                        @foreach (var arr in UserYear)
                        {

                            @:['@(arr[1])', @(arr[0])],
                        }

                    ]);
                } else if (selection == 'month') {
                    var data = google.visualization.arrayToDataTable([
                        ['Amount of questions', 'Time(month)'],



                        @foreach (var arr in UserMonth)
                        {

                            @:['@(arr[1])', @(arr[0])],
                        }

                    ]);
                } else {
                    var data = google.visualization.arrayToDataTable([
                        ['Amount of questions', 'Time(days)'],





                        @foreach (var arr in UserDay)
                        {
                            Debug.WriteLine(arr[0]);
                            Debug.WriteLine(arr[1]);
                            @:['@(arr[1])', @(arr[0])],
                        }

                    ]);
                }


            </text>
        }

        var options = {
            title: 'Amount of asked questions over time',
            height: 200,
            curveType: 'function',
            backgroundColor: '#26262b',
            colors: ['#50d4b5'],
            legend: { position: 'bottom' }
        };

        var chart = new google.visualization.LineChart(document.getElementById('line_statics_question'));

        chart.draw(data, options);

        
    }


</script>

@* var selection = $('#timeSelect').value(); *@
@* if (selection == "day") { *@
@* var data = google.visualization.arrayToDataTable([ *@
@* ['Amount of questions', 'Time'], *@
@* @foreach (var arr in day) *@
@* { *@
@* *@
@*     @:['@(arr[1])', '@(arr[0])'], *@
@* } *@
@* ]); *@
@* } *@
@* if (selection == "month") { *@
@* var data = google.visualization.arrayToDataTable([ *@
@* ['Amount of questions', 'Time'], *@
@* @foreach (var arr in month) *@
@* { *@
@* *@
@*     @:['@(arr[1])', '@(arr[0])'], *@
@* } *@
@* ]); *@
@* } *@
@* else { *@
@*            *@
@* } *@
